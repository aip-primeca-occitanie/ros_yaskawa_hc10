<?xml version="1.0"?>
<launch>

  <!-- Wether we work with the left or right robot (when entering the room)  -->
  <!-- Left robot is a HC10DT -->
  <!-- Right robot is a HC10 -->
  <!-- This influences the URDF and SRDF files -->
  <arg name="left_robot" default="True" />

  <arg if="$(arg left_robot)" name="robot_namespace" value="yaskawa_LEFT" />
  <arg unless="$(arg left_robot)" name="robot_namespace" value="yaskawa_RIGHT" />

  <group ns="$(arg robot_namespace)">

    <!-- The planning and execution components of MoveIt! configured to run -->
    <!-- using the ROS-Industrial interface. -->
    <rosparam command="load" file="$(find motoman_hc10_moveit_config)/config/joint_names.yaml"/>
  
    <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
    <!--  - if sim=false, a robot_ip argument is required -->
    <arg name="sim" default="true" />
    <!--Uncomment the lines below if you want to fixate the robot_ip address and its controller-->
    <arg name="robot_ip" default="192.168.0.113" unless="$(arg sim)" />
    <arg name="controller" default="yrc1000" unless="$(arg sim)" /> 

    <!-- load the robot_description parameter before launching ROS-I nodes -->
    <include file="$(find motoman_hc10_moveit_config)/launch/planning_context.launch" >
      <arg name="load_robot_description" value="true" />
      <arg name="left_robot" value="$(arg left_robot)" />
    </include>

    <!-- run the robot simulator and action interface nodes -->
    <group if="$(arg sim)">
      <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
    </group>

    <!-- run the "real robot" interface nodes -->
    <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
    <!--   - replace these calls with appropriate robot-specific calls or launch files -->
    <group unless="$(arg sim)">
      <include file="$(find motoman_hc10_support)/launch/robot_interface_streaming_hc10.launch" >
        <arg name="robot_ip" value="$(arg robot_ip)"/>
        <arg name="controller" value="$(arg controller)"/>
      </include>
    </group>

    <!-- publish the robot state (tf transforms) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <rosparam if="$(arg sim)" ns="move_group" file="$(find motoman_hc10_moveit_config)/config/controllers.yaml"/>
    <rosparam unless="$(arg sim)" ns="move_group" file="$(find motoman_hc10_moveit_config)/config/simple_moveit_controllers.yaml"/>

    <include file="$(find motoman_hc10_moveit_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true" />
      <arg name="sim" value="$(arg sim)" />
      <arg name="planning_context_already_loaded" value="true" />
      <arg name="left_robot" value="$(arg left_robot)" />
      <!-- <arg name="fake_execution" value="$(arg sim)"/> -->
    </include>

    <include file="$(find motoman_hc10_moveit_config)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
    </include>

    <!-- add interferences using python script -->
    <!--node name="add_interferences" pkg="motoman_hc10_moveit_config" type="add_interferences.py" /-->
    
    <!--  
      <include file="$(find motoman_hc10_moveit_config)/launch/default_warehouse_db.launch" />
    -->

  </group>

</launch>
